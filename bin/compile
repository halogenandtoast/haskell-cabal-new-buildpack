#!/bin/sh

set -e

BUILD_DIR="$1"
CACHE_DIR="$2"
ENV_DIR="$3"

GHC_VER=8.4.3
CABAL_VER=2.2.0.0
WORKING_HOME=/app
PROFILE_PATH="$BUILD_DIR/.profile.d/haskell.sh"

export PATH=$WORKING_HOME/vendor/ghc-$GHC_VER/bin:$WORKING_HOME/vendor/cabal-install-$CABAL_VER/bin:$PATH

mkdir -p $WORKING_HOME/vendor
mkdir -p $CACHE_DIR/download
mkdir -p $(dirname $PROFILE_PATH)

if [ ! -e $CACHE_DIR/ghc-$GHC_VER ]; then
  if [ ! -e $CACHE_DIR/download/ghc-$GHC_VER ]; then
    echo "------> Downloading GHC $GHC_VER"
    curl -# -L https://downloads.haskell.org/~ghc/$GHC_VER/ghc-$GHC_VER-x86_64-deb8-linux.tar.xz | tar x -J -C $CACHE_DIR/download
  fi

  echo "------> Installing GHC $GHC_VER"
  cd $CACHE_DIR/download/ghc-$GHC_VER
  ./configure --prefix $WORKING_HOME/vendor/ghc-$GHC_VER
  make install

  echo "-----> Caching GHC $GHC_VER binaries"
  cp -R $WORKING_HOME/vendor/ghc-$GHC_VER $CACHE_DIR
else
  echo "-----> Restoring GHC $GHC_VER binaries"
  rm -fr $WORKING_HOME/vendor/ghc-$GHC_VER
  cp -R $CACHE_DIR/ghc-$GHC_VER $WORKING_HOME/vendor
fi

if [ ! -e $CACHE_DIR/cabal-install-$CABAL_VER ]; then
  if [ ! -e $CACHE_DIR/download/cabal-install-$CABAL_VER ]; then
    echo "------> Downloading cabal-install $CABAL_VER"
    curl -# -L https://www.haskell.org/cabal/release/cabal-install-$CABAL_VER/cabal-install-$CABAL_VER.tar.gz | tar zx -C $CACHE_DIR/download
  fi

  echo "------> Installing cabal-install $CABAL_VER"
  cd $CACHE_DIR/download/cabal-install-$CABAL_VER
  export PREFIX=$WORKING_HOME/vendor/cabal-install-$CABAL_VER
  ./bootstrap.sh

  echo "-----> Caching cabal-install $CABAL_VER binaries"
  cp -R $WORKING_HOME/vendor/cabal-install-$CABAL_VER $CACHE_DIR
else
  echo "-----> Restoring cached cabal-install $CABAL_VER binaries"
  cp -R $CACHE_DIR/cabal-install-$CABAL_VER $WORKING_HOME/vendor
fi

cd $BUILD_DIR

cabal new-update
cabal new-build

echo "export PATH=$PATH" >> $PROFILE_PATH

cat << PROCFILE > Procfile
web: cabal run
PROCFILE
